{
  "messages": [
    "content='write a tree traversal code using python' additional_kwargs={} response_metadata={} id='5cfe6ebf-0b35-4c89-bb5c-2f476cfde130'",
    "content='\\nclass Node:\\n    def __init__(self, key):\\n        self.left = None\\n        self.right = None\\n        self.val = key\\n\\ndef print_inorder(root):\\n    if root:\\n        print_inorder(root.left)\\n        print(root.val, end=\" \")\\n        print_inorder(root.right)\\n\\ndef print_postorder(root):\\n    if root:\\n        print_postorder(root.left)\\n        print_postorder(root.right)\\n        print(root.val, end=\" \")\\n\\ndef print_preorder(root):\\n    if root:\\n        print(root.val, end=\" \")\\n        print_preorder(root.left)\\n        print_preorder(root.right)\\n\\nroot = Node(1)\\nroot.left = Node(2)\\nroot.right = Node(3)\\nroot.left.left = Node(4)\\nroot.left.right = Node(5)\\n\\nprint(\"Preorder traversal of binary tree is\")\\nprint_preorder(root)\\n\\nprint(\"\\\\nInorder traversal of binary tree is\")\\nprint_inorder(root)\\n\\nprint(\"\\\\nPostorder traversal of binary tree is\")\\nprint_postorder(root)\\n' additional_kwargs={} response_metadata={} id='08932b4e-dbcf-4bdb-8bac-5b9bd303de47'"
  ],
  "code_content": "\nclass Node:\n    def __init__(self, key):\n        self.left = None\n        self.right = None\n        self.val = key\n\ndef print_inorder(root):\n    if root:\n        print_inorder(root.left)\n        print(root.val, end=\" \")\n        print_inorder(root.right)\n\ndef print_postorder(root):\n    if root:\n        print_postorder(root.left)\n        print_postorder(root.right)\n        print(root.val, end=\" \")\n\ndef print_preorder(root):\n    if root:\n        print(root.val, end=\" \")\n        print_preorder(root.left)\n        print_preorder(root.right)\n\nroot = Node(1)\nroot.left = Node(2)\nroot.right = Node(3)\nroot.left.left = Node(4)\nroot.left.right = Node(5)\n\nprint(\"Preorder traversal of binary tree is\")\nprint_preorder(root)\n\nprint(\"\\nInorder traversal of binary tree is\")\nprint_inorder(root)\n\nprint(\"\\nPostorder traversal of binary tree is\")\nprint_postorder(root)\n",
  "quality_score": 80,
  "num_words": 121
}